# Datasets
motion_head: &id001
   name      : "motion_head"
   dataref   : ["t1_tse_tra_Kopf_0002"]
   labelref  : [0]
   dataart   : ["t1_tse_tra_Kopf_Motion_0003"]
   labelart  : [1]
   pathout   : "/home/wzehui/med_data/ImageSimilarity/Databases/MRPhysics/CNN/Headcross"
   bestmodel : {CNN2D: "head_4040_lr_0.0001_bs_64", CNN3D: "xxx", MNetArt: "xxx", VNetArt: "xxx"}
#
motion_abd: &id002
   name      : "motion_abd" 
   dataref   : ["t1_tse_tra_fs_mbh_Leber_0004"]
   labelref  : [0]
   dataart   : ["t1_tse_tra_fs_mbh_Leber_Motion_0005"]
   labelart  : [1]
   pathout   : "/home/wzehui/med_data/ImageSimilarity/Databases/MRPhysics/CNN/Abdcross"
   bestmodel : {CNN2D: "abdomen_4040_lr_0.0001_bs_64", CNN3D: "xxx", MNetArt: "xxx", VNetArt: "xxx"}
#
motion_becken: &id003
   name      : "motion_becken"
   dataref   : ["t1_tse_tra_fs_Becken_0008"]
   labelref  : [0]
   dataart   : ["t1_tse_tra_fs_Becken_Motion_0010"]
   labelart  : [1]
   pathout   : "/home/wzehui/med_data/ImageSimilarity/Databases/MRPhysics/CNN/Beckencross"
   bestmodel : {CNN2D: "head_becken_4040_lr_0.0001_bs_64", CNN3D: "xxx", MNetArt: "xxx", VNetArt: "xxx"}
#
motion_head_abd: &id004
   name      : "motion_head_abd"
   dataref   : ["t1_tse_tra_Kopf_0002", "t1_tse_tra_fs_mbh_Leber_0004"]
   labelref  : [0, 0]
   dataart   : ["t1_tse_tra_Kopf_Motion_0003", "t1_tse_tra_fs_mbh_Leber_Motion_0005"]
   labelart  : [1, 1]
   pathout   : "/home/wzehui/med_data/ImageSimilarity/Databases/MRPhysics/CNN/Head-Abdcross"
   bestmodel : {CNN2D: "head_abd_4040_lr_0.0001_bs_64", CNN3D: "xxx", MNetArt: "xxx", VNetArt: "xxx"}
#
motion_head_becken: &id005
   name      : "motion_head_becken"
   dataref   : ["t1_tse_tra_Kopf_0002", "t1_tse_tra_fs_Becken_0008"]
   labelref  : [0, 0]
   dataart   : ["t1_tse_tra_Kopf_Motion_0003", "t1_tse_tra_fs_Becken_Motion_0010"]
   labelart  : [1, 1]
   pathout   : "/home/wzehui/med_data/ImageSimilarity/Databases/MRPhysics/CNN/Head-Beckencross"
   bestmodel : {CNN2D: "head_becken_4040_lr_0.0001_bs_64", CNN3D: "xxx", MNetArt: "xxx", VNetArt: "xxx"}
#
motion_head_abd_becken: &id006
   name      : "motion_head_abd_becken"
   dataref   : ["t1_tse_tra_Kopf_0002", "t1_tse_tra_fs_mbh_Leber_0004", "t1_tse_tra_fs_Becken_0008"]
   labelref  : [0, 0, 0]
   dataart   : ["t1_tse_tra_Kopf_Motion_0003", "t1_tse_tra_fs_mbh_Leber_Motion_0005", "t1_tse_tra_fs_Becken_Motion_0010"]
   labelart  : [1, 1, 1]
   pathout   : "/home/wzehui/med_data/ImageSimilarity/Databases/MRPhysics/CNN/Allcross"
   bestmodel : {CNN2D: "head_abd_becken_4040_lr_0.0001_bs_64", CNN3D: "xxx", MNetArt: "xxx", VNetArt: "xxx"}
#
motion_abd_becken: &id007
   name      : "motion_head_abd_becken"
   dataref   : ["t1_tse_tra_fs_mbh_Leber_0004", "t1_tse_tra_fs_Becken_0008"]
   labelref  : [0, 0]
   dataart   : ["t1_tse_tra_fs_mbh_Leber_Motion_0005", "t1_tse_tra_fs_Becken_Motion_0010"]
   labelart  : [1, 1, 1]
   pathout   : "/home/wzehui/med_data/ImageSimilarity/Databases/MRPhysics/CNN/Abd-Beckencross"
   bestmodel : {CNN2D: "head_abd_becken_4040_lr_0.0001_bs_64", CNN3D: "xxx", MNetArt: "xxx", VNetArt: "xxx"}
#
motion_NAKO: &id008
  name: "motion_NAKO"
  dataref: ["3D_GRE_TRA_bh_F_0006"]
  labelref: [0]
  dataart: ["3D_GRE_TRA_bh_F_0006"]
  labelart: [1]
  pathout: "/home/wzehui/med_data/ImageSimilarity/Databases/MRPhysics/CNN/NAKO"
  bestmodel: {CNN2D: "head_4040_lr_0.0001_bs_64", CNN3D: "xxx", MNetArt: "xxx", VNetArt: "xxx"}

#
#### set parameters ####
# database name
MRdatabase : MRPhysics
# subdirectories in database, patient, output directory
subdirs : ["newProtocol", "dicom_sorted", "testout", "correction", "NAKO_IQA"]
# CNN database to be modeled
selectedDatabase: *id002
# network architecture (if existing for chosen database!)
# see *.py files in subfolders of "./networks"
# naming convention: artifactType_bodyRegion_network OR artifactType_network
# artifactType: motion, multiclass
# bodyRegion: abd, head, all
# network: CNN2D, CNN3D, MNetArt, VNetArt
# Single-pathway Multiscale networks are: MS_SPP, MS_FCN_simple, MS_FCN_MultiFM, MS_Inception_Archi1, MS_Inception_Archi2
# Dual-pathway Multiscale networks are: MS_VNet_MultiPath, MS_SPP_MultiPath, MS_FCN_MultiFM_MultiPath
network : "motion_all_CNN2D"

# scaling range
range : [0, 1]
# patches
patchSize : [80, 80, 4] # [x, y] or [x,y,z], but z should not larger than 10, else too much zero-padding when scaling factor is small
patchOverlap : 0.6 #0.8 # 80%
# sLabeling strategy
# 'volume': volume-wise labeling
# 'patch': patch-wise labeling
sLabeling : "volume"
# patching strategy
# 'rigidPatching' or'adaptivePatching':
sPatching : "rigidPatching"
# splitting strategy
# 'normal': percentage splitting
# 'crossvalidation_patient': cross validation on patient (leave one patient out)
# 'crossvalidation_data': cross validation on data
sSplitting : "crossvalidation_patient"
# number of folds
nFolds : 15
# splitting in training and test set
dSplitval : 0.1
# optimization type in keras: 'grid', 'hyperas', 'none'
# v1.1: grid and none are the same -> automatic switching if batchSize|learningRate are arrays, then 'grid', else 'none'
sOpti : "grid"
# optimized parameters
batchSize : [3] #[32]
lr : [0.00001]
# amount of epochs
epochs : 100
# perform training (true) or prediction (false)
lTrain : false
# save intermediate results
lSave : true
# (list of) path(s) of to be predicted images
lPredictImg : ["/media/wzehui/med_data/ImageSimilarity/Databases/MRPhysics/..."]
# (list with) labels of to be predicted images (either scalar or path to patch-wise label file)
lLabelPredictImg : [ 1 ]
# sPredictModel: if empty, the best model in the selected database will be chosen.
# Otherwise, the given trained model will be used in predicting, e.g. "testout4040_lr_0.0005_bs_128"
sPredictModel : ""
# sTrainingMethod
# "None": No scaling process
# "ScaleJittering": Scaling each image randomly before patching
# "MultiScaleTogether": to train the donw sampled patches with the original patches together
# "MultiScaleSeparated": to train the donw sampled patches and the original patches in different pathways
sTrainingMethod : "None"
# lScaleFactor: the changing rate of patch size in scaling process
# factor < 1 means down sampling later, factor > 1 up sampling later
# in "MultiScaleSeparated" method: only one down sample rate is supported, this corresponds one bypass in CNN
lScaleFactor : [0.5, 1]

# lCorrection
# true: artifact correction
# false: classification
lCorrection: true
# parameters in artifacts correction
correction:
  # training model
  sCorrection: "motion_VAE3D"
  # predict model
  bestModel: "vae_weight_ps_80_bs_3_lr_1e-05_10_mar" #"vae_weight_ps_80_bs_32_lr_0.0001_10_mar"
  # loss network for calculating perceptual loss
  pl_network: "vgg19"
  loss_model: "vae_weight_ps_80_bs_2_lr_0.0001_10_mar"
  kl_weight: 1 #10000 # KL loss weight e4
  tv_weight: 0 # TV loss weight
  ge_weight: 0 # gradient entropy weight
  perceptual_weight: 0.00001  #0.00001 # perceptual loss weight e4
  mse_weight: 0 # MSE loss weight
  abs_weight: 100 #100 # L1 loss weight e4
  MS_SSIM_weight: 100000 #100000 # MS-SSIM loss weight e4
  charbonnier_weight: 0  # Charbonnier loss weight
  loss_ref2ref: 0.4 # ref2ref weight
  loss_art2ref: 0.6 # art2ref weight
  unpatch: true
  nScale: 1 # 255
  # specify the actual size of the images when predicting
  # Head:sizes differ for different patients. e.g. Head 01_ab:[256, 196, 40]
  # Abdomen: sizes differ for different patients. e.g. Abdomen 01_ab: [256, 320, 28], Abdomen 06_hr: [192, 320, 30], Abdomen 13_sg: [256, 320, 30], Abdomen 17_ks: [260, 320, 30]
  # Pelvis: sizes differ for different patients. e.g. Pelvis 10_mar: [240, 320, 40], Pelvis 15_yb: [208, 320, 40]
  # NAKO: sizes differ for different patients. e.g. Q1:[260, 320, 96]
  actualSize: [256, 320, 30]
  evaluate: true
  test_patient: "10_mar"
  augmentation: false # augmentation flag
